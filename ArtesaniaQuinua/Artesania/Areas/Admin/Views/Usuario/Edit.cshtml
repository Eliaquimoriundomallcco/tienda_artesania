@model Artesania.Models.Usuario

@{
    ViewBag.Title = "Edit";
}

<h2>Editar</h2>



<div class="row">

    <div class="col-md-6">


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Usuario</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.UsuarioID)

            <div class="form-group">
                @Html.LabelFor(model => model.Usuario1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Usuario1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Usuario1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Clave, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Clave, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Clave, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Activo)
                        @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>


  
    <div class="col-md-6">
        @if (Model.UsuarioID > 0)
        {
            using (Html.BeginForm("Adjuntar", "Usuario", FormMethod.Post, new { id = "frm-adjuntar" }))
            {
                <input type="hidden" name="ProductoId" value="@Model.UsuarioID" />
                <div class="row">
                    <div class="col-xs-10">
                        <div class="form-group">
                            <input type="file" name="documento" accept="image/x-png, image/gif, image/jpeg" @*accept="image/*"*@ />
                        </div>
                    </div>
                    <div class="col-xs-2">
                        <button type="submit" class="btn btn-primary btn-block">Adjuntar</button>
                    </div>
                </div>
            }
            <div id="adjuntos-cargados"></div>
        }
    </div>


  
</div>




    @section scripts{
        <script>
            $(document).ready(function () {
                @if (Model.UsuarioID > 0)
            {
                <text>
                CargarAdjuntos();
                </text>
            }

                $("#frm-adjuntar").submit(function () {
                    var form = $(this);

                    form.ajaxSubmit({
                        dataType: 'JSON',
                        type: 'POST',
                        url: form.attr('action'),
                        success: function (r) {
                            if (r.respuesta) {
                                CargarAdjuntos();
                            }
                            else { alert(r.error); }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(errorThrown);
                        }
                    });
                    return false;
                })
            });

            function CargarAdjuntos() {
                $("#adjuntos-cargados").load("@Url.Content("~/Admin/Usuario/adjuntos?UsuarioID=" + Model.UsuarioID)");
            }


            function EliminarImagen(ImagenId) {
                $.ajax({
                    data: { UsuarioImagenId: ImagenId },
                    url: '@Url.Action("EliminarImagen","Usuario")',
                    type: 'post',
                    success: function (r) {
                        if (r.respuesta) {
                            CargarAdjuntos();
                        }
                        else
                            alert(r.error);
                    },
                    error: function (jqXHR, textStatus, errorThrown) { alert(errorThrown); }
                });
            }



        </script>
    }